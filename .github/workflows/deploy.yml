name: Build And Deploy Docker Image

on:
  push:
    #    branches: [main]
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: production
    permissions:
      packages: write
      contents: read
    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Get version without 'v'
        id: get_version
        run: |
          VERSION="${{ github.ref_name }}"
          VERSION=$(echo "$VERSION" | sed 's/^v//')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.actor }}/${{ vars.APP_NAME }}:${{ steps.get_version.outputs.version }}
          build-args: |
            MySQL_URL=${{ secrets.DATABASE_URL }}

      - name: ssh remote deploy
        uses: fifsky/ssh-action@master
        with:
          command: |
            cd /
            echo -e "1.docker login start==>"
            echo ${{ secrets.GH_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            
            echo -e "2.docker stop myblog container==>"
            docker container stop ${{ vars.APP_NAME }}
            
            echo -e "3.docker conatainer rm==>"
            docker container rm ${{ vars.APP_NAME }}
            
            echo -e "4.docker image rm==>"
            docker image ls -q ghcr.io/${{ github.actor }}/${{ vars.APP_NAME }}* | xargs docker image rm -f
            
            echo -e "5.docker pull==>"
            docker pull ghcr.io/${{ github.actor }}/${{ vars.APP_NAME }}:${{ steps.get_version.outputs.version }}
            
            echo -e "6.docker container create and start==>"
            docker container run -d \
              -p 3000:3000 \
              -e "NEXT_PUBLIC_GISCUS_REPO=${{ vars.GISCUS_REPO }}" \
              -e "NEXT_PUBLIC_GISCUS_REPOSITORY_ID=${{ secrets.GISCUS_REPOSITORY_ID }}" \
              -e "NEXT_PUBLIC_GISCUS_CATEGORY=${{ vars.GISCUS_CATEGORY }}" \
              -e "NEXT_PUBLIC_GISCUS_CATEGORY_ID=${{ secrets.GISCUS_CATEGORY_ID }}" \
              -e "GITHUB_API_TOKEN=${{ secrets.GB_API_TOKEN }}" \
              -e "DATABASE_URL=${{ secrets.DATABASE_URL }}" \
              --name ${{ vars.APP_NAME }} ghcr.io/${{ github.actor }}/${{ vars.APP_NAME }}:${{ steps.get_version.outputs.version }}
          host: ${{ secrets.NAS_HOST }}
          port: ${{ secrets.NAS_PORT }}
          user: ${{ secrets.NAS_USER }}
          pass: ${{ secrets.NAS_PASSWORD }}
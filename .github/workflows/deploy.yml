name: Build And Deploy Docker Image

on:
  push:
    branches: [my]
  # pull_request:
  #   branches: [my]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: production
    permissions:
      packages: write
    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ vars.APP_NAME }}:latest

      # - name: ssh remote deploy
      #   uses: fifsky/ssh-action@master
      #   with:
      #     command: |
      #       cd /
      #       echo -e "1.docker login start==>"
      #       echo ${{ secrets.ALIYUN_DOCKER_PASSWORD }} | docker login ${{ vars.REGISTRY_MIRROR }} --username ${{ secrets.ALIYUN_DOCKER_USERNAME }} --password-stdin

      #       echo -e "2.docker stop myblog container==>"
      #       docker container stop ${{ vars.APP_NAME }}

      #       echo -e "3.docker conatainer rm==>"
      #       docker container rm ${{ vars.APP_NAME }}

      #       echo -e "4.docker image rm==>"
      #       docker image rm ${{ vars.REGISTRY_MIRROR }}/${{ vars.REGISTRY_NAMESPACE }}/${{ vars.APP_NAME }}:latest

      #       echo -e "5.docker pull==>"
      #       docker pull ${{ vars.REGISTRY_MIRROR }}/${{ vars.REGISTRY_NAMESPACE }}/${{ vars.APP_NAME }}:latest

      #       echo -e "6.docker container create and start==>"
      #       docker container run -d -p 3000:3000 --name ${{ vars.APP_NAME }} ${{ vars.REGISTRY_MIRROR }}/${{ vars.REGISTRY_NAMESPACE }}/${{ vars.APP_NAME }}:latest

      #       echo -e "7.docker logout==>"
      #       docker logout
      #     host: ${{ secrets.NAS_HOST }}
      #     user: ${{ secrets.NAS_USER }}
      #     pass: ${{ secrets.NAS_PASSWORD }}
